<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Volleyball Matches</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <script src="/socket.io/socket.io.js"></script>
    <script>
        //Setting up socket listeners
        document.addEventListener('DOMContentLoaded', () => {
            const socket = io();
            const matchesList = document.getElementById('matches-list');

            socket.on('match_created', () => {
                location.reload();
            });

            socket.on('match_updated', () => {
                location.reload();
            });

            socket.on('match_deleted', () => {
                location.reload();
            });
        });

        //Redirect to a match
        function viewMatch(matchId) {
            window.location.href = `/matches/${matchId}`;
        }

        //Logic for deleting match
        function deleteMatch(matchId) {
            if (confirm('Are you sure you want to delete this match?')) {
                fetch(`/matches/${matchId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        alert('Match deleted successfully');
                        location.reload();
                    } else {
                        alert('Failed to delete match');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
            }
        }

        //Soritng matches
        function sortMatches(status) {
            window.location.href = `/matches?status=${status}`;
        }

        //Logic for copying match result to clipboard
        async function copyMatch(matchId) {
            try {
                //Fetching data
                const response = await fetch(`/matches/copy/${matchId}`);
                const match = await response.json();

                const sets = match.resultDetailed.resD || [];
                const teamAResults = [];
                const teamBResults = [];
                let teamAWins = 0;
                let teamBWins = 0;
                
                //Spliting data
                sets.forEach(set => {
                    const [scoreA, scoreB] = set.split(':').map(Number);
                    teamAResults.push(scoreA);
                    teamBResults.push(scoreB);
                    if (scoreA > scoreB) {
                        teamAWins++;
                    } else {
                        teamBWins++;
                    }
                });

                //Calculating how many spaces need to be before headers
                const spaces = ' '.repeat((match.teamA_name.length > match.teamB_name.length ? match.teamA_name.length : match.teamB_name.length) + 2);
                //Constructing headers
                const headers = spaces + sets.map((_, index) => `S${index + 1}`).join(' | ');

                // Joining results to a string
                const teamAResult = teamAResults.join(' | ');
                const teamBResult = teamBResults.join(' | ');

                const matchDate = new Date(match.date);
                //Formating data
                const formattedDate = `${matchDate.toLocaleDateString('pl-PL').replace(/\//g, '.')} ${matchDate.toLocaleTimeString('pl-PL', { hour: '2-digit', minute: '2-digit' })}`;

                //Calculating how many white characters need to be for correct format
                const maxTeamNameLength = Math.max(match.teamA_name.length, match.teamB_name.length) + 2;
                const padTeamName = (name) => name.padEnd(maxTeamNameLength, ' ');

                //Setting up final format
                const formattedResult = `
${headers} | Total  
${padTeamName(match.teamA_name)}${teamAResult} |   ${teamAWins}  
${padTeamName(match.teamB_name)}${teamBResult} |   ${teamBWins}  
${formattedDate}
                `;
                //Copying to clipboard
                await navigator.clipboard.writeText(formattedResult);
                alert('Match details copied to clipboard!');
            } catch (error) {
                console.error('Error copying match details:', error);
                alert('Failed to copy match details.');
            }
        }
    </script>
    <!-- Bootstrap JS and dependencies -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4 text-center">Volleyball Matches</h1>
        <div class="mb-4 d-flex justify-content-around align-items-center">
            <button class="btn btn-primary mr-2" onclick="sortMatches('ALL')">All Matches</button>
            <button class="btn btn-primary mr-2" onclick="sortMatches('PLANNED')">Planned Matches</button>
            <button class="btn btn-primary mr-2" onclick="sortMatches('IN_PROGRESS')">In Progress</button>
            <button class="btn btn-success" onclick="sortMatches('FINISHED')">Finished</button>
        </div>
        <ul id="matches-list" class="list-group">
            <% matches.forEach(match => { %>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <div>
                        <strong><%= match.date.toISOString() %></strong> - <%= match.teamA_name %> vs <%= match.teamB_name %> - <%= match.result %> (<%= match.status %>)
                    </div>
                    <div>
                        <% if (match.status !== 'FINISHED') { %>
                            <button class="btn btn-info btn-sm mr-2" onclick="viewMatch(<%= match.id %>)">View</button>
                        <% } else { %>
                            <button class="btn btn-warning btn-sm mr-2" onclick="copyMatch(<%= match.id %>)">Copy</button>
                        <% } %>
                        <button class="btn btn-danger btn-sm" onclick="deleteMatch(<%= match.id %>)">Delete</button>
                    </div>
                </li>
            <% }) %>
        </ul>
        <br>
        <a href="/add-match" class="btn btn-success w-100">Add a new match</a>
    </div>
</body>
</html>
